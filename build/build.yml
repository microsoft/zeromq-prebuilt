parameters:
  repo: ''
  tag: ''
  python_arch: 'x64'
  npm_config_arch: 'x64'
  ARCH: 'x64'
  artifact_name: ''
  prebuild_folder_name: ''
  build: true

steps:
- task: NodeTool@0
  inputs:
    versionSource: 'spec'
    versionSpec: '18.x'

- task: UsePythonVersion@0
  displayName: Use Python 3 ${{ parameters.python_arch }}
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: ${{ parameters.python_arch }}

- task: Bash@3
  displayName: Git Clone
  inputs:
    targetType: 'inline'
    script: |
      set -ex
      REPO=`[ "${{ parameters.repo }}" ] &&  echo ${{ parameters.repo }} || echo $(node -p "require('./config.json').zeromqRepo")`
      TREEISH=`[ "${{ parameters.tag }}" ] && echo ${{ parameters.tag }} || echo $(node -p "require('./config.json').zeromqTag")`
      git clone https://github.com/${REPO}.git zeromq.js
      cd zeromq.js
      git checkout $TREEISH

- task: Bash@3
  displayName: Patch zeromq.js
  inputs:
    targetType: 'inline'
    script: |
      node ./build/patch.js

- bash: |
    npm install
    npm run prebuild
  displayName: Build
  condition: and(succeeded(), eq('${{ parameters.build }}', 'true'))
  workingDirectory: zeromq.js
  env:
    ARCH: ${{ parameters.ARCH }}
    npm_config_arch: ${{ parameters.npm_config_arch }}

- task: Bash@3
  displayName: ls
  condition: and(succeeded(), eq('${{ parameters.build }}', 'true'))
  inputs:
    workingDirectory: zeromq.js/prebuilds
    targetType: 'inline'
    script: |
      ls

- task: PublishPipelineArtifact@0
  displayName: 'Publish Pipeline Artifact'
  condition: and(succeeded(), eq('${{ parameters.build }}', 'true'))
  inputs:
    artifactName: ${{ parameters.artifact_name }}
    targetPath: $(Build.SourcesDirectory)/zeromq.js/prebuilds/${{ parameters.prebuild_folder_name }}
