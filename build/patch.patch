diff --git a/binding.gyp b/binding.gyp
index 68a8f58..683d01e 100644
--- a/binding.gyp
+++ b/binding.gyp
@@ -82,7 +82,6 @@
             ['OS == "mac"', {
               'libraries': [
                 '<(module_root_dir)/build/libzmq/lib/libzmq.a',
-                "<!@(pkg-config libsodium --libs)",
               ],
             }],

@@ -220,7 +219,7 @@
               'xcode_settings': {
                 'CLANG_CXX_LIBRARY': 'libc++',
                 'CLANG_CXX_LANGUAGE_STANDARD': 'c++17',
-                'MACOSX_DEPLOYMENT_TARGET': '10.15',
+                'MACOSX_DEPLOYMENT_TARGET': '10.9',
                 # 'LLVM_LTO': 'YES',
                 'GCC_OPTIMIZATION_LEVEL': '3',
                 'DEPLOYMENT_POSTPROCESSING': 'YES',
diff --git a/package.json b/package.json
index 058ecd1..cd2e3d9 100644
--- a/package.json
+++ b/package.json
@@ -20,7 +20,7 @@
   "dependencies": {
     "@aminya/node-gyp-build": "4.5.0-aminya.4",
     "cross-env": "^7.0.3",
-    "node-addon-api": "^5.0.0",
+    "node-addon-api": "^6.0.0",
     "shelljs": "^0.8.5",
     "shx": "^0.3.4"
   },
@@ -35,7 +35,6 @@
     "@types/which": "^2.0.1",
     "benchmark": "^2.1.4",
     "chai": "^4.3.7",
-    "deasync": "^0.1.28",
     "downlevel-dts": "^0.11.0",
     "electron-mocha": "^11.0.2",
     "eslint-config-atomic": "^1.18.1",
diff --git a/script/build.ts b/script/build.ts
index c055ebc..fb0af81 100644
--- a/script/build.ts
+++ b/script/build.ts
@@ -37,7 +37,7 @@ function main() {
   build_options += archCMakeOptions()

   if (process.platform === "darwin") {
-    const MACOSX_DEPLOYMENT_TARGET = "10.15"]
+    const MACOSX_DEPLOYMENT_TARGET = (process.env.ARCH || process.arch).toLowerCase() === "arm64" ? "10.15" : "10.9"
     process.env.MACOSX_DEPLOYMENT_TARGET = MACOSX_DEPLOYMENT_TARGET
     build_options += ` -DCMAKE_OSX_DEPLOYMENT_TARGET=${MACOSX_DEPLOYMENT_TARGET}`
   }
@@ -78,7 +78,7 @@ function main() {
     writeFileSync(clang_format_file, "")
   }

-  const cmake_configure = `cmake -S "${src_dir}" -B ./build ${build_options} -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DCMAKE_INSTALL_PREFIX="${libzmq_install_prefix}" -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_STATIC=ON -DBUILD_TESTS=OFF -DBUILD_SHARED=OFF -DWITH_DOCS=OFF -DWITH_LIBSODIUM=ON -DWITH_LIBSODIUM_STATIC=ON`
+  const cmake_configure = `cmake -S "${src_dir}" -B ./build ${build_options} -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DCMAKE_INSTALL_PREFIX="${libzmq_install_prefix}" -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_STATIC=ON -DBUILD_TESTS=OFF -DBUILD_SHARED=OFF -DWITH_DOCS=OFF -DWITH_LIBSODIUM=OFF`
   console.log(cmake_configure)
   exec(cmake_configure, execOptions)

