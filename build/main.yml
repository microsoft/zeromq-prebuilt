trigger:
  branches:
   include:
   - main
   - updateReadme
  tags:
    include:
    - v*

jobs:
- job: win32-x64
  pool:
    vmImage: 'windows-latest'
  steps:
    - template: build.yml
      parameters:
        artifact_name: 'win32-x64'
        prebuild_folder_name: 'win32-x64'

- job: win32-ia32
  pool:
    vmImage: 'windows-latest'
  steps:
    - template: build.yml
      parameters:
        python_arch: x86
        ARCH: x86
        npm_config_arch: ia32
        artifact_name: 'win32-ia32'
        prebuild_folder_name: 'win32-ia32'

- job: darwin-x64
  pool:
    vmImage: 'macOS-latest'
  steps:
    - template: build.yml
      parameters:
        ARCH: ''
        artifact_name: 'darwin-x64'
        prebuild_folder_name: 'darwin-x64'

- job: darwin-arm64
  pool:
    vmImage: 'macOS-latest'
  steps:
    - template: build.yml
      parameters:
        ARCH: arm64
        artifact_name: 'darwin-arm64'
        prebuild_folder_name: 'darwin-arm64'

- job: linux-x64-glibc
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - template: build.yml
      parameters:
        artifact_name: 'linux-x64'
        prebuild_folder_name: 'linux-x64'

# The build configurations have been taken from here:
# https://github.com/zeromq/zeromq.js/blob/47bb35c1941cb4fa8b510fb7da4d40b37cfa2e5f/.travis.yml#L94
- job: linux-arm64-glibc
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - template: build.yml
      parameters:
        build: false

    - task: Bash@3
      displayName: Install dependencies
      inputs:
        targetType: 'inline'
        script: |
          sudo apt install gcc-9-aarch64-linux-gnu g++-9-aarch64-linux-gnu

    - bash: |
        npm install
        npm run prebuild
      displayName: Build
      workingDirectory: zeromq.js
      env:
        ARCH: arm64
        npm_config_arch: arm64
        TRIPLE: aarch64-linux-gnu
        GCC: 9
        ARCHIVE_SUFFIX: -armv8

    - template: artifacts.yml
      parameters:
        artifact_name: linux-arm64-glibc


# The build configurations have been taken from here:
# https://github.com/zeromq/zeromq.js/blob/47bb35c1941cb4fa8b510fb7da4d40b37cfa2e5f/.travis.yml#L94
- job: linux-arm-glibc
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - template: build.yml
      parameters:
        build: false

    - task: Bash@3
      displayName: Install dependencies
      inputs:
        targetType: 'inline'
        script: |
          sudo apt install gcc-9-arm-linux-gnueabihf g++-9-arm-linux-gnueabihf

    - bash: |
        npm install
        npm run prebuild
      displayName: Build
      workingDirectory: zeromq.js
      env:
        ARCH: arm
        npm_config_arch: arm
        TRIPLE: arm-linux-gnueabihf
        GCC: 9
        ARCHIVE_SUFFIX: -armv7

    - template: artifacts.yml
      parameters:
        artifact_name: linux-arm-glibc

- job: linux-x64-musl
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - template: build.yml
      parameters:
        build: false


    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
    - task: Bash@3
      displayName: Install dependencies
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          sudo apt install gcc-9-aarch64-linux-gnu g++-9-aarch64-linux-gnu

    - task: Bash@3
      displayName: Build
      env:
        CURRENDIR: $(Build.SourcesDirectory)
        DOCKERCMD: apk add --no-cache pkgconfig curl tar python3 make gcc g++ cmake musl-dev && npm i -g pnpm && pnpm install && pnpm run prebuild
      inputs:
        targetType: 'inline'
        workingDirectory: zeromq.js
        script: |
            docker pull node:18-alpine
            docker tag node:18-alpine builder
            docker run --volume $CURRENDIR/zeromq.js:/app --workdir /app --privileged builder sh -c "$DOCKERCMD"

    - template: artifacts.yml
      parameters:
        artifact_name: linux-x64-musl

- job: linux-arm64-musl
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - template: build.yml
      parameters:
        build: false
        artifact_name: 'darwin-x64'
        prebuild_folder_name: 'darwin-x64'

    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
    - task: Bash@3
      displayName: Install dependencies
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          sudo apt install gcc-9-aarch64-linux-gnu g++-9-aarch64-linux-gnu

    - task: Bash@3
      displayName: Build
      env:
        CURRENDIR: $(Build.SourcesDirectory)
        DOCKERCMD: apk add --no-cache pkgconfig curl tar python3 make gcc g++ cmake musl-dev && npm i -g pnpm && npm_config_arch=arm64 ARCH=arm64 pnpm install && npm_config_arch=arm64 ARCH=arm64 pnpm run prebuild
      inputs:
        targetType: 'inline'
        workingDirectory: zeromq.js
        script: |
            docker pull node:18-alpine
            docker tag node:18-alpine builder
            docker run --volume $CURRENDIR/zeromq.js:/app --workdir /app --privileged -e ARCH='arm64' -e npm_config_arch='arm64' builder sh -c "$DOCKERCMD"

    - template: artifacts.yml
      parameters:
        artifact_name: linux-arm64-musl

- job: publish
  pool:
    vmImage: 'ubuntu-latest'
  # condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  dependsOn:
  - win32-x64
  - win32-ia32
  - darwin-x64
  - darwin-arm64
  - linux-x64-glibc
  - linux-arm64-glibc
  - linux-arm-glibc
  - linux-x64-musl
  - linux-arm64-musl
  steps:
    - template: publish.yml
